I/O scheduler readahead throughput(byte/sec)
mq-deadline   128       733430207
mq-deadline   0         888859125
none          128       563940033
none          0         681308263


---

## **VM環境で本書と異なる結果が得られる理由**

### **1. 仮想化環境の影響**
VM環境では、以下のような仮想化に伴うI/O処理の違いが存在します：

#### **(1) 仮想ディスクが実際のHDDを完全には模倣しない**
- VM内のディスク操作は、仮想化レイヤーを通してホストOSの物理HDDに送信されます。
- **readaheadやI/Oスケジューラの効果がホストOSに依存**してしまい、ゲストOS（VM内）での設定変更が期待どおりの効果を発揮しない場合があります。

#### **(2) ホストOS側のI/Oキャッシュ**
- ホストOSがHDDにアクセスする際、独自の**キャッシュやリードアヘッド最適化**を実行している可能性があります。
  - ゲストOSで`readahead`を無効にしても、ホストOSのキャッシュが効率的にデータを処理する場合、スループットが高くなることがあります。

#### **(3) ホストとゲストのスケジューラの干渉**
- ゲストOS内のスケジューラ（`mq-deadline`や`none`）とホストOSのスケジューラ（例: `cfq`や`bfq`）が独立して動作しており、両者が競合して最適化の効果を損なう場合があります。

---

### **2. 仮想化によるパフォーマンスの変化**

#### **(1) ランダムアクセスが物理環境より高速化される可能性**
- ホストOSがリクエストをキャッシュすることで、ランダムアクセスのI/O性能が改善されることがあります。
  - その結果、`readahead`が有効でも効果が薄れる（もしくは逆効果になる）ことがあります。

#### **(2) I/Oスケジューラの効果が制限される**
- **仮想化のI/O処理モデル**では、ゲストOSのI/OリクエストがホストOSで大きな単位のバーストとして処理されることがあります。
  - このため、ゲストOSのI/Oスケジューラがリクエストを細かく調整しても、ホストOS側の大雑把な処理でその効果が打ち消されます。
  - 例として、`mq-deadline`のようにI/Oリクエストを整列化するスケジューラが、VM内では期待どおり機能しない可能性があります。

---

### **3. スループットが異なる理由の具体例**

#### **(1) Readaheadが無効の方が高いスループットを示す理由**
- **物理環境**では、HDDはシーケンシャルアクセス時に`readahead`を有効にすることで大幅な性能向上が見られる。
  - 理由：リードアヘッドにより、連続したブロックを一度に読み込むことでヘッド移動が減少するため。
- **VM環境**では、ホストOSが既にキャッシュを持っている場合、ゲストOSの`readahead`が無駄なオーバーヘッドを生むことがある。
  - 理由：ゲストOSが先読みするブロックがホストOSのキャッシュと競合し、実効性能が低下する場合がある。

#### **(2) `mq-deadline`と`none`の結果が異なる理由**
- 本書（物理環境）では、スケジューラの影響が小さい一方、VM環境では`mq-deadline`がホストOSのI/O特性に適していた可能性がある。
  - `mq-deadline`はシーケンシャルアクセスの整列化に特化しており、ホストOSが順次アクセスを期待する場合に最適化が進む。

---

### **VM環境の結果の特性を理解するための検証案**

1. **ホストOSでのキャッシュ無効化**
   - ホストOSのキャッシュを無効化（例: `echo 3 >/proc/sys/vm/drop_caches`）し、ゲストOSの`readahead`の影響を純粋に測定。

2. **仮想ディスクの設定変更**
   - 仮想ディスクを**RAW形式**（キャッシュなしの直接アクセス）に変更して測定。

3. **ホストOS側のI/Oスケジューラ確認**
   - ホストOSのI/Oスケジューラが`cfq`や`bfq`などの特定のアルゴリズムに設定されている場合、その影響を排除する。

4. **物理環境で再測定**
   - 同じ条件で物理環境（VMを使用せず、HDD直接接続）での測定結果と比較する。

---

### **結論**

VM環境では、以下の要因が物理環境の結果との違いを引き起こしています：
1. ホストOSのキャッシュやスケジューラの干渉。
2. ゲストOSの設定がホストOSによる最適化で影響を受ける。
3. 仮想化に伴うI/Oのバースト処理やキャッシュ効果。

物理環境とVM環境の差異は、仮想化技術の特性によるものであり、結果の背景を理解するにはホストOSとゲストOSのI/O設定を詳細に分析する必要があります。不明点があればさらに詳細に説明します！
